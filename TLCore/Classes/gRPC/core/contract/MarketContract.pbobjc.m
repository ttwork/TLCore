// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: core/contract/market_contract.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "MarketContract.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(MarketCancelOrderContract);
GPBObjCClassDeclaration(MarketSellAssetContract);

#pragma mark - MarketContractRoot

@implementation MarketContractRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

static GPBFileDescription MarketContractRoot_FileDescription = {
  .package = "protocol",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - MarketSellAssetContract

@implementation MarketSellAssetContract

@dynamic ownerAddress;
@dynamic sellTokenId;
@dynamic sellTokenQuantity;
@dynamic buyTokenId;
@dynamic buyTokenQuantity;

typedef struct MarketSellAssetContract__storage_ {
  uint32_t _has_storage_[1];
  NSData *ownerAddress;
  NSData *sellTokenId;
  NSData *buyTokenId;
  int64_t sellTokenQuantity;
  int64_t buyTokenQuantity;
} MarketSellAssetContract__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ownerAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = MarketSellAssetContract_FieldNumber_OwnerAddress,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MarketSellAssetContract__storage_, ownerAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "sellTokenId",
        .dataTypeSpecific.clazz = Nil,
        .number = MarketSellAssetContract_FieldNumber_SellTokenId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MarketSellAssetContract__storage_, sellTokenId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "sellTokenQuantity",
        .dataTypeSpecific.clazz = Nil,
        .number = MarketSellAssetContract_FieldNumber_SellTokenQuantity,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MarketSellAssetContract__storage_, sellTokenQuantity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "buyTokenId",
        .dataTypeSpecific.clazz = Nil,
        .number = MarketSellAssetContract_FieldNumber_BuyTokenId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MarketSellAssetContract__storage_, buyTokenId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "buyTokenQuantity",
        .dataTypeSpecific.clazz = Nil,
        .number = MarketSellAssetContract_FieldNumber_BuyTokenQuantity,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(MarketSellAssetContract__storage_, buyTokenQuantity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MarketSellAssetContract)
                                   messageName:@"MarketSellAssetContract"
                               fileDescription:&MarketContractRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MarketSellAssetContract__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MarketCancelOrderContract

@implementation MarketCancelOrderContract

@dynamic ownerAddress;
@dynamic orderId;

typedef struct MarketCancelOrderContract__storage_ {
  uint32_t _has_storage_[1];
  NSData *ownerAddress;
  NSData *orderId;
} MarketCancelOrderContract__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ownerAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = MarketCancelOrderContract_FieldNumber_OwnerAddress,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MarketCancelOrderContract__storage_, ownerAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.clazz = Nil,
        .number = MarketCancelOrderContract_FieldNumber_OrderId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MarketCancelOrderContract__storage_, orderId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MarketCancelOrderContract)
                                   messageName:@"MarketCancelOrderContract"
                               fileDescription:&MarketContractRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MarketCancelOrderContract__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
