// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: core/contract/shield_contract.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
#define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
#import <Protobuf/GPBProtocolBuffers.h>
#else
#import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AuthenticationPath;
@class IncrementalMerkleTree;
@class IncrementalMerkleVoucher;
@class OutputPoint;
@class PedersenHash;
@class ReceiveDescription;
@class SpendDescription;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ShieldContractRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ShieldContractRoot : GPBRootObject
@end

#pragma mark - AuthenticationPath

typedef GPB_ENUM(AuthenticationPath_FieldNumber) {
    AuthenticationPath_FieldNumber_ValueArray = 1,
};

GPB_FINAL @interface AuthenticationPath : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolArray *valueArray;
/** The number of items in @c valueArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger valueArray_Count;

@end

#pragma mark - MerklePath

typedef GPB_ENUM(MerklePath_FieldNumber) {
    MerklePath_FieldNumber_AuthenticationPathsArray = 1,
    MerklePath_FieldNumber_IndexArray = 2,
    MerklePath_FieldNumber_Rt = 3,
};

GPB_FINAL @interface MerklePath : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AuthenticationPath*> *authenticationPathsArray;
/** The number of items in @c authenticationPathsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger authenticationPathsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolArray *indexArray;
/** The number of items in @c indexArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger indexArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *rt;

@end

#pragma mark - OutputPoint

typedef GPB_ENUM(OutputPoint_FieldNumber) {
    OutputPoint_FieldNumber_Hash_p = 1,
    OutputPoint_FieldNumber_Index = 2,
};

GPB_FINAL @interface OutputPoint : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

@property(nonatomic, readwrite) int32_t index;

@end

#pragma mark - OutputPointInfo

typedef GPB_ENUM(OutputPointInfo_FieldNumber) {
    OutputPointInfo_FieldNumber_OutPointsArray = 1,
    OutputPointInfo_FieldNumber_BlockNum = 2,
};

GPB_FINAL @interface OutputPointInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OutputPoint*> *outPointsArray;
/** The number of items in @c outPointsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger outPointsArray_Count;

@property(nonatomic, readwrite) int32_t blockNum;

@end

#pragma mark - PedersenHash

typedef GPB_ENUM(PedersenHash_FieldNumber) {
    PedersenHash_FieldNumber_Content = 1,
};

GPB_FINAL @interface PedersenHash : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *content;

@end

#pragma mark - IncrementalMerkleTree

typedef GPB_ENUM(IncrementalMerkleTree_FieldNumber) {
    IncrementalMerkleTree_FieldNumber_Left = 1,
    IncrementalMerkleTree_FieldNumber_Right = 2,
    IncrementalMerkleTree_FieldNumber_ParentsArray = 3,
};

GPB_FINAL @interface IncrementalMerkleTree : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PedersenHash *left;
/** Test to see if @c left has been set. */
@property(nonatomic, readwrite) BOOL hasLeft;

@property(nonatomic, readwrite, strong, null_resettable) PedersenHash *right;
/** Test to see if @c right has been set. */
@property(nonatomic, readwrite) BOOL hasRight;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PedersenHash*> *parentsArray;
/** The number of items in @c parentsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger parentsArray_Count;

@end

#pragma mark - IncrementalMerkleVoucher

typedef GPB_ENUM(IncrementalMerkleVoucher_FieldNumber) {
    IncrementalMerkleVoucher_FieldNumber_Tree = 1,
    IncrementalMerkleVoucher_FieldNumber_FilledArray = 2,
    IncrementalMerkleVoucher_FieldNumber_Cursor = 3,
    IncrementalMerkleVoucher_FieldNumber_CursorDepth = 4,
    IncrementalMerkleVoucher_FieldNumber_Rt = 5,
    IncrementalMerkleVoucher_FieldNumber_OutputPoint = 10,
};

GPB_FINAL @interface IncrementalMerkleVoucher : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) IncrementalMerkleTree *tree;
/** Test to see if @c tree has been set. */
@property(nonatomic, readwrite) BOOL hasTree;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PedersenHash*> *filledArray;
/** The number of items in @c filledArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger filledArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) IncrementalMerkleTree *cursor;
/** Test to see if @c cursor has been set. */
@property(nonatomic, readwrite) BOOL hasCursor;

@property(nonatomic, readwrite) int64_t cursorDepth;

@property(nonatomic, readwrite, copy, null_resettable) NSData *rt;

@property(nonatomic, readwrite, strong, null_resettable) OutputPoint *outputPoint;
/** Test to see if @c outputPoint has been set. */
@property(nonatomic, readwrite) BOOL hasOutputPoint;

@end

#pragma mark - IncrementalMerkleVoucherInfo

typedef GPB_ENUM(IncrementalMerkleVoucherInfo_FieldNumber) {
    IncrementalMerkleVoucherInfo_FieldNumber_VouchersArray = 1,
    IncrementalMerkleVoucherInfo_FieldNumber_PathsArray = 2,
};

GPB_FINAL @interface IncrementalMerkleVoucherInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<IncrementalMerkleVoucher*> *vouchersArray;
/** The number of items in @c vouchersArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger vouchersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *pathsArray;
/** The number of items in @c pathsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger pathsArray_Count;

@end

#pragma mark - SpendDescription

typedef GPB_ENUM(SpendDescription_FieldNumber) {
    SpendDescription_FieldNumber_ValueCommitment = 1,
    SpendDescription_FieldNumber_Anchor = 2,
    SpendDescription_FieldNumber_Nullifier = 3,
    SpendDescription_FieldNumber_Rk = 4,
    SpendDescription_FieldNumber_Zkproof = 5,
    SpendDescription_FieldNumber_SpendAuthoritySignature = 6,
};

GPB_FINAL @interface SpendDescription : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *valueCommitment;

/** merkle root */
@property(nonatomic, readwrite, copy, null_resettable) NSData *anchor;

/** used for check double spend */
@property(nonatomic, readwrite, copy, null_resettable) NSData *nullifier;

/** used for check spend authority signature */
@property(nonatomic, readwrite, copy, null_resettable) NSData *rk;

@property(nonatomic, readwrite, copy, null_resettable) NSData *zkproof;

@property(nonatomic, readwrite, copy, null_resettable) NSData *spendAuthoritySignature;

@end

#pragma mark - ReceiveDescription

typedef GPB_ENUM(ReceiveDescription_FieldNumber) {
    ReceiveDescription_FieldNumber_ValueCommitment = 1,
    ReceiveDescription_FieldNumber_NoteCommitment = 2,
    ReceiveDescription_FieldNumber_Epk = 3,
    ReceiveDescription_FieldNumber_CEnc = 4,
    ReceiveDescription_FieldNumber_COut = 5,
    ReceiveDescription_FieldNumber_Zkproof = 6,
};

GPB_FINAL @interface ReceiveDescription : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *valueCommitment;

@property(nonatomic, readwrite, copy, null_resettable) NSData *noteCommitment;

/** for Encryption */
@property(nonatomic, readwrite, copy, null_resettable) NSData *epk;

/** Encryption for incoming, decrypt it with ivk */
@property(nonatomic, readwrite, copy, null_resettable) NSData *cEnc;

/** Encryption for audit, decrypt it with ovk */
@property(nonatomic, readwrite, copy, null_resettable) NSData *cOut;

@property(nonatomic, readwrite, copy, null_resettable) NSData *zkproof;

@end

#pragma mark - ShieldedTransferContract

typedef GPB_ENUM(ShieldedTransferContract_FieldNumber) {
    ShieldedTransferContract_FieldNumber_TransparentFromAddress = 1,
    ShieldedTransferContract_FieldNumber_FromAmount = 2,
    ShieldedTransferContract_FieldNumber_SpendDescriptionArray = 3,
    ShieldedTransferContract_FieldNumber_ReceiveDescriptionArray = 4,
    ShieldedTransferContract_FieldNumber_BindingSignature = 5,
    ShieldedTransferContract_FieldNumber_TransparentToAddress = 6,
    ShieldedTransferContract_FieldNumber_ToAmount = 7,
};

GPB_FINAL @interface ShieldedTransferContract : GPBMessage

/** transparent address */
@property(nonatomic, readwrite, copy, null_resettable) NSData *transparentFromAddress;

@property(nonatomic, readwrite) int64_t fromAmount;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SpendDescription*> *spendDescriptionArray;
/** The number of items in @c spendDescriptionArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger spendDescriptionArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ReceiveDescription*> *receiveDescriptionArray;
/** The number of items in @c receiveDescriptionArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger receiveDescriptionArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *bindingSignature;

/** transparent address */
@property(nonatomic, readwrite, copy, null_resettable) NSData *transparentToAddress;

/** the amount to transparent to_address */
@property(nonatomic, readwrite) int64_t toAmount;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
